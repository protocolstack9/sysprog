{
	...

	if (ac != 0 || !strcmp(av[0],"?")) {
		LOG(LOG_ALWAYS, "Usage: reboot");
		return CLI_OK;
	}

	...
	system("reboot");

	return CLI_OK;
}

--------------------------------------------------------------------

  * 위 코드로 이틀동안 삽질했다. -_-;
    아주 기본적인 논리인데 머리가 석화되어 한참이나 테스트를 해보고야 이유를 알게 되었다.
    (이건 개발자로의 자질뿐 아니라 아이큐를 의심해야 하는 문제인듯...)

	현상은 이랬다.
	system("reboot")을 수행하는데 시스템이 종료되는 것이 아니라, 프로그램만 종료되는 것이다.

	어라? 하면서 여기저기 printf를 넣어보는데, 마찬가지.


	원인은 reboot과 전혀 상관 없었다.

	ac가 0이면
	0 != 0 이 거짓이 되고, || 다음 strcmp(av[0],"?") 실행되면서 엉뚱한 pointer와 "?"를 비교하면서
	fault가 발생해 죽는 것이다.

	다른 함수들은
	if (ac != 2 || !strcmp(av[0],"?"))처럼
	  - 매개변수가 지정된 개수만큼 들어오지 않거나
	  - ?를 입력했을 때 Usage를 보여주도록 하는 것인데
	ac가 0이면 strcmp까지 가지도 않기 때문에 fault가 발생하지 않았던 것이다.


	이 함수는
	  - 매개변수가 있거나
	  - ?를 입력했을 때 Usage를 보여주도록 짜여진 것인데
	ac가 0이면 strcmp까지 수행하기 때문에 fault가 발생한 것이다.

	다른 함수와 같은 모양으로 짜려면
	  - 매개변수가 0이 아니거나
	  - 매개변수가 1이고 strcmp(av[0],"?")면 Usage를 출력하면 되지만,

	논리만 따져보면
	  매개변수가 없으면 항상 system 함수 실행,
	  반대로 매개변수가 있으면 항상 Usage 출력하면 되므로
	strcmp 부분이 필요하지 않다.
